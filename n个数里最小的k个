import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str = in.nextLine();
        String[] s = str.split(" ");
        int[] array = new int[s.length - 1];
        for (int i = 0; i < s.length - 1; i++) {
            array[i] = Integer.parseInt(s[i]);
        }
        int k = Integer.parseInt(s[s.length - 1]);
        int[] ret = smallTopK(array, k);
        if (ret.length > 0) {
            for (int i = 0; i < ret.length - 1; i++) {
                System.out.print(ret[i] + " ");
            }
            System.out.print(ret[ret.length - 1]);
        }
    }
    
    
    private static int[] smallTopK(int[] array, int k) {
        if (array == null || array.length == 0) {
            throw new RuntimeException("The array is empty.");
        }
        if (k <= 0 || k > array.length) {
            return new int[0];
        }
        int[] res = new int[k];
        PriorityQueue<Integer> heap = new PriorityQueue<>(k, new Comparator<Integer>() {
            public int compare(Integer o1, Integer o2) {
                return o2.compareTo(o1);
            }
        });
        for (int i = 0; i < array.length; i++) {
            if (heap.size() < k) {
                heap.offer(array[i]);
            } else if (heap.peek() > array[i]) {
                heap.poll();
                heap.offer(array[i]);
            }
        }
        int index = 0;
        for (Integer num : heap) {
            res[index++] = num;
        }
        Arrays.sort(res);
        return res;
    }
}
