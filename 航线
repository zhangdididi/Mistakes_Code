/*
链接：https://www.nowcoder.com/questionTerminal/11faa8d2900f4ce6a53194c7015a44f4
来源：牛客网

“呼！！终于到了，可是接下来要怎么走才能到达楚楚街港港呢？”亮亮在醋溜港直发愁。 
突然“啾”的一下，一只银色小船出现在亮亮的面前，上面坐着小精灵丹丹“又见面了，有什么可以帮助你的么？
”小精灵向亮亮眨了眨眼睛，微笑着说。 
“我想去楚楚街港，但我不知道要怎么走，请问你可以告诉我么？”亮亮按捺着激动的心情轻声问道。 “楚楚街港呀......
那是个特别美好的地方”小精灵歪着头想了想，说“我只能告诉你大海上所有的航线，剩下的就只能靠你自己啦~” “只有所有的航线呀”，
亮亮的内心再三挣扎，却又没有其他的办法。 “不管有多困难，我一定要达到楚楚街港，请你告诉我吧”亮亮坚定地对小精灵说。 
小精灵欣赏地点了点头，递给亮亮一张航线图，并叮嘱道“时限是1000天，一定要到哦~”，然后如来时一般“啾”的一声，消失了。 
亮亮现在迫切地想要抵达楚楚街港，请问亮亮最快能在第几天抵达楚楚街港呢？
*/

import java.util.Scanner;
class Line{
    public Line(){
        visited=false;
        time=Integer.MAX_VALUE;
    }
    public void set(int t,int b,int e){
        this.begin=b;
        this.end=e;
        this.time=t;
    }
    boolean visited;
    int begin;
    int end;
    int time;
}
public class Main{
     public static int dijkstra(Line[][] lines,int n) {
         int[] time=new int[n+1];
            for (int i=2;i<=n;i++) {
                if(lines[1][i].time<lines[1][i].begin)
                    time[i]=lines[1][i].time;
                else
                    time[i]=lines[1][i].time+lines[1][i].end;
            }
            time[1]=1;
            lines[1][1].visited=true;
            int v=1;
            while (v!=n) {
                int minTime=Integer.MAX_VALUE;
                v=1;
                for(int j=1;j<=n;j++)
                {
                    if(!lines[j][j].visited&&time[j]<minTime)
                    {
                        minTime=time[j];
                        v=j;
                    }
                }
                lines[v][v].visited=true;
                for(int j=2;j<=n;j++)
                {
                    if(!lines[j][j].visited&&lines[v][j].time<Integer.MAX_VALUE){
                        int tmp;
                        if(lines[v][j].time+time[v]<lines[v][j].begin||time[v]>lines[v][j].end)
                        {
                            tmp=lines[v][j].time+time[v];
                        }
                        else
                            tmp=lines[v][j].end+lines[v][j].time;
                        time[j]=time[j]<tmp?time[j]:tmp;
                    }
                }
            }
            return time[n]+1;
     }
 
    public static void main(String[] args) {
 
        Scanner sc=new Scanner(System.in);
        while(sc.hasNext())
        {
            int n=sc.nextInt();
            int m=sc.nextInt();
            Line[][] lines=new Line[n+1][n+1];
            for(int i=1;i<=n;i++){
                for(int j=1;j<=n;j++){
                    lines[i][j]=new Line();
                }
            }
            for (int i=0;i<m;i++) {
                int p=sc.nextInt();
                int q=sc.nextInt();
                int t=sc.nextInt();
                int b=sc.nextInt();
                int e=sc.nextInt();
                lines[p][q].set(t,b,e);
                lines[q][p]=lines[p][q];
            }
            System.out.println(dijkstra(lines,n));
        }
    }
  
}
